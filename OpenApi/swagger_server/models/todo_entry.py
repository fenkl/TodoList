# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TodoEntry(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, name: str=None, beschreibung: str=None, list_id: str=None):  # noqa: E501
        """TodoEntry - a model defined in Swagger

        :param id: The id of this TodoEntry.  # noqa: E501
        :type id: str
        :param name: The name of this TodoEntry.  # noqa: E501
        :type name: str
        :param beschreibung: The beschreibung of this TodoEntry.  # noqa: E501
        :type beschreibung: str
        :param list_id: The list_id of this TodoEntry.  # noqa: E501
        :type list_id: str
        """
        self.swagger_types = {
            'id': str,
            'name': str,
            'beschreibung': str,
            'list_id': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'beschreibung': 'beschreibung',
            'list_id': 'list_id'
        }
        self._id = id
        self._name = name
        self._beschreibung = beschreibung
        self._list_id = list_id

    @classmethod
    def from_dict(cls, dikt) -> 'TodoEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TodoEntry of this TodoEntry.  # noqa: E501
        :rtype: TodoEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this TodoEntry.

        Die eindeutige ID des ToDo-Eintrags  # noqa: E501

        :return: The id of this TodoEntry.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this TodoEntry.

        Die eindeutige ID des ToDo-Eintrags  # noqa: E501

        :param id: The id of this TodoEntry.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this TodoEntry.

        Der Name des ToDo-Eintrags  # noqa: E501

        :return: The name of this TodoEntry.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this TodoEntry.

        Der Name des ToDo-Eintrags  # noqa: E501

        :param name: The name of this TodoEntry.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def beschreibung(self) -> str:
        """Gets the beschreibung of this TodoEntry.

        Die Beschreibung des ToDo-Eintrags  # noqa: E501

        :return: The beschreibung of this TodoEntry.
        :rtype: str
        """
        return self._beschreibung

    @beschreibung.setter
    def beschreibung(self, beschreibung: str):
        """Sets the beschreibung of this TodoEntry.

        Die Beschreibung des ToDo-Eintrags  # noqa: E501

        :param beschreibung: The beschreibung of this TodoEntry.
        :type beschreibung: str
        """
        if beschreibung is None:
            raise ValueError("Invalid value for `beschreibung`, must not be `None`")  # noqa: E501

        self._beschreibung = beschreibung

    @property
    def list_id(self) -> str:
        """Gets the list_id of this TodoEntry.

        Die ID der ToDo-Liste, zu der der Eintrag gehört  # noqa: E501

        :return: The list_id of this TodoEntry.
        :rtype: str
        """
        return self._list_id

    @list_id.setter
    def list_id(self, list_id: str):
        """Sets the list_id of this TodoEntry.

        Die ID der ToDo-Liste, zu der der Eintrag gehört  # noqa: E501

        :param list_id: The list_id of this TodoEntry.
        :type list_id: str
        """
        if list_id is None:
            raise ValueError("Invalid value for `list_id`, must not be `None`")  # noqa: E501

        self._list_id = list_id
